{"version":3,"sources":["assets/DomainModel.jpeg","components/Header.jsx","components/Footer.jsx","components/Dashboard.jsx","components/NotFound.jsx","components/ProgressCharts.jsx","components/TimeTracker.jsx","components/Resources.jsx","components/DomainModel.jsx","App.jsx","serviceWorker.js","index.js"],"names":["module","exports","Header","Navbar","bg","variant","expand","to","Brand","Toggle","aria-controls","Collapse","id","Nav","className","Link","NavDropdown","title","Item","href","target","Footer","ScCenter","styled","div","Dashboard","Fragment","Row","Col","md","NotFound","ProgressCharts","TimeTracker","Resources","ScDM","img","DomainModel","src","image","ScWrapper","App","Container","path","component","exact","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.ceefb8ea.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/DomainModel.d7eed3a9.jpeg\";","import React from \"react\";\r\nimport { LinkContainer } from \"react-router-bootstrap\";\r\nimport {\r\n    Navbar,\r\n    Nav,\r\n    NavDropdown\r\n} from \"react-bootstrap\";\r\n\r\nconst Header = () => {\r\n    return (\r\n        <header>\r\n            <Navbar bg=\"dark\" variant=\"dark\" expand=\"md\">\r\n                <LinkContainer to=\"/\">\r\n                    <Navbar.Brand>Index Fun[ds]!</Navbar.Brand>\r\n                </LinkContainer>\r\n                <Navbar.Toggle aria-controls=\"navbar\" />\r\n\r\n                <Navbar.Collapse id=\"navbar\">\r\n                    <Nav className=\"mr-auto\">\r\n                        <LinkContainer to=\"/\">\r\n                            <Nav.Link>About the Project</Nav.Link>\r\n                        </LinkContainer>\r\n                        <LinkContainer to=\"/ProgressCharts\">\r\n                            <Nav.Link>Progress Charts</Nav.Link>\r\n                        </LinkContainer>\r\n                        <LinkContainer to=\"/TimeTracker\">\r\n                            <Nav.Link>Time Tracker</Nav.Link>\r\n                        </LinkContainer>\r\n                        <LinkContainer to=\"/Resources\">\r\n                            <Nav.Link>Project Resources</Nav.Link>\r\n                        </LinkContainer>\r\n                    </Nav>\r\n                    <Nav>\r\n                        <NavDropdown title=\"Project Documents\">\r\n                            <NavDropdown.Item href=\"https://docs.google.com/document/d/1F1gdHGxIq9B5S1vJwiCAnaqOMJhMp2uJZ-GZUMdfkkA/edit?usp=sharing\" target=\"_blank\">\r\n                                Project Plan\r\n                            </NavDropdown.Item>\r\n                            <LinkContainer to=\"/DomainModel\">\r\n                                <NavDropdown.Item>\r\n                                    Domain Model\r\n                                </NavDropdown.Item>\r\n                            </LinkContainer>\r\n                        </NavDropdown>\r\n                    </Nav>\r\n                </Navbar.Collapse>\r\n            </Navbar>\r\n        </header>\r\n    );\r\n};\r\n\r\nexport default Header;","import React from \"react\";\r\n\r\nconst Footer = () => {\r\n    return (\r\n        <footer>\r\n            <hr />\r\n            <p>Copyright &copy; 2019</p>\r\n        </footer>\r\n    );\r\n};\r\n\r\nexport default Footer;","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { \r\n    Row,\r\n    Col\r\n} from \"react-bootstrap\";\r\n\r\nconst ScCenter = styled.div`\r\n    text-align: center;\r\n`;\r\n\r\nconst Dashboard = () => {\r\n    return (\r\n        <React.Fragment>\r\n            <ScCenter>\r\n                <h1>Beta Rotation</h1>\r\n                <p className=\"lead\">Team Index Fun[ds]!</p>\r\n            </ScCenter>\r\n            <Row>\r\n                <Col md=\"9\">\r\n                    <h2>Project Synopsis</h2>\r\n                    <p>\r\n                        The Beta Rotation project will provide a web application and stock market monitoring service which uses an algorithm to predict when a \r\n                        portfolio should be rotated between the S&P 500 general US Market and the Utilities sector. By monitoring real-time stock data and \r\n                        implementing a Beta Rotation strategy, the project will be able to consistently out-perform the traditional investment strategy of \r\n                        \"buy and hold\", where shares are purchased and held for long-term gain. Beta Rotation itself involves tracking the relative strengths \r\n                        of the S&P 500 general US Market and the Utilities sector. When one of the index's relative strengths is greater than the other, a signal \r\n                        or notification will be sent from the application. Financial advisors will be able to use the signal to notify their investors when to \r\n                        rotate parts of their investment portfolio between the two indexes. To prove the effectiveness of the algorithm, the Index Fun[ds] \r\n                        team will utilize historical market data to run simulations. In these simulations, the application will be able to consistently identify \r\n                        the best time to rotate an investor's portfolio between the Utilities sector and the S&P 500 general US Market. In addition to sending \r\n                        a signal to a financial advisor, the application will present a dashboard view which allows advisors to view the Beta Rotation strategy \r\n                        numbers in or close to real-time.\r\n                    </p>\r\n                </Col>\r\n                <Col md=\"3\">\r\n                    <h4>Project Sponsor:</h4>\r\n                    <p>Beltz Ianni &amp; Associates</p>\r\n                        <br />\r\n                    <h4>Team Members:</h4>\r\n                    <div>Stephen Cioffi</div>\r\n                    <div>Ian Clare</div>\r\n                    <div>Catherine Osadciw</div>\r\n                    <div>Kyle Rohde</div>\r\n                </Col>\r\n            </Row>\r\n        </React.Fragment>\r\n    );\r\n}\r\n\r\nexport default Dashboard","import React from \"react\";\r\n\r\nconst NotFound = () => {\r\n    return (\r\n        <React.Fragment>\r\n            <h1>404 - Page Not Found</h1>\r\n                <br /><br />\r\n            <em>Well this is embarrassing...</em>\r\n        </React.Fragment>\r\n    );\r\n};\r\n\r\nexport default NotFound;","import React from \"react\";\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\nconst ProgressCharts = () => {\r\n    return (\r\n        <React.Fragment>\r\n            <a\r\n                href=\"https://docs.google.com/document/d/1TUYAgM6ut7A_7cpAE0a4lU5HjEm9RvAM_76nDTGSz8A/edit?usp=sharing\"\r\n                target=\"_blank\"\r\n            >View the 4-Up Project Charts on Google Sheets</a>\r\n        </React.Fragment>\r\n    );\r\n};\r\n\r\nexport default ProgressCharts;","import React from \"react\";\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\nconst TimeTracker = () => {\r\n    return (\r\n        <React.Fragment>\r\n            <a\r\n                href=\"https://drive.google.com/a/g.rit.edu/file/d/1oF6NZerZxf2Ky0vFYFqs8Vq6XlzcXJ1F/view?usp=sharing\"\r\n                target=\"_blank\"\r\n            >View the Time Tracker on Google Sheets</a>\r\n        </React.Fragment>\r\n    );\r\n};\r\n\r\nexport default TimeTracker;","import React from \"react\";\r\n\r\nconst Resources = () => {\r\n    return (\r\n        <React.Fragment>\r\n            <h3>Project Resources</h3>\r\n            <ul>\r\n                <li>\r\n                    <a href=\"https://trello.com/b/4FAl6wly/senior-project\" target=\"_blank\">Trello Board</a> - Team Trello board used for tracking work stories.\r\n                </li>\r\n            </ul>\r\n                <br /><br />\r\n            <h3>Code Repositories</h3>\r\n            <ul>\r\n                <li>\r\n                    <a href=\"https://github.com/scioffi/bni-senior-project-website\" target=\"_blank\">Team Website (GitHub)</a> - This website's code; available on GitHub.\r\n                </li>\r\n            </ul>\r\n        </React.Fragment>\r\n    );\r\n};\r\n\r\nexport default Resources;","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport image from \"../assets/DomainModel.jpeg\";\r\n\r\nconst ScDM = styled.img`\r\n    width: 100%;\r\n`;\r\n\r\nconst DomainModel = () => {\r\n    return (\r\n        <React.Fragment>\r\n            <h2>Domain Model</h2>\r\n            <ScDM src={image} />\r\n        </React.Fragment>\r\n    );\r\n};\r\n\r\nexport default DomainModel;","import React from 'react';\nimport { Container } from \"react-bootstrap\";\nimport { BrowserRouter, Route, Switch } from \"react-router-dom\";\nimport styled from \"styled-components\";\nimport {\n  Header,\n  Footer,\n  Dashboard,\n  NotFound,\n  ProgressCharts,\n  TimeTracker,\n  Resources,\n  DomainModel\n} from \"./components\";\n\nconst ScWrapper = styled.div`\n    padding: 25px 0;\n`;\n\nfunction App() {\n  return (\n  <BrowserRouter>\n    <Container>\n      <Header />\n      <ScWrapper>\n        <Switch>\n          <Route path=\"/ProgressCharts\" component={ProgressCharts} />\n          <Route path=\"/TimeTracker\" component={TimeTracker} />\n          <Route path=\"/DomainModel\" component={DomainModel} />\n          <Route path=\"/Resources\" component={Resources} />\n          <Route path=\"/\" exact component={Dashboard} />\n          <Route component={NotFound} />\n        </Switch>\n      </ScWrapper>\n      <Footer />\n    </Container>\n  </BrowserRouter>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}